# This is a basic workflow to help you get started with Actions

name: Terraform

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
      - main
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
     run:
       working-directory: ./terraform
    env:
      ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"

    steps:
# Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

 # Install the latest version of the Terraform CLI
    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    # - name: Azure Authentication
    #   id: login
    #   uses: azure/login@v1
    #   env:
    #     ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
    #     ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
    #     ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
    #     ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"

 # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init |
        export ARM_CLIENT_ID=$ARM_CLIENT_ID
        export ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET
        export ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID
        export ARM_TENANT_ID=$ARM_TENANT_ID
        
    - name: Terraform Format
      run: terraform fmt

    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 3.112.0
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform"
      env:
        ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
        ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
        ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
        run: |
          terraform init -reconfigure
          terraform plan -no-color
 
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 3.112.0
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform"
    
    # - name: Terraform Plan
    #   id: tplan
    #   env:
    #     ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
    #     ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
    #     ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
    #     ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
    #   run: |
    #       terraform init -reconfigure
    #       terraform plan -no-color

    # # - name: 'Terraform Plan'
    # #   uses: hashicorp/terraform-github-actions@master
    # #   with:
    # #     tf_actions_version: 3.112.0
    # #     tf_actions_subcommand: 'plan'
    # #     tf_actions_working_dir: "./terraform"
    # #     tf_actions_comment: true
    # #   env:
    # #     ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
    # #     ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
    # #     ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
    # #     ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
 
    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 3.112.0
    #     tf_actions_subcommand: 'apply'
    #     tf_actions_working_dir: "./terraform"    

    # # - name: Terraform Validate
    # #   run: terraform validate

    # # - name: Terraform plan 
    # #   run: terraform plan 

    # # - name: Terraform apply
    # #   run: terraform apply -auto-approve
  
